{"backend_state":"init","kernel":"python3","kernel_state":"idle","kernel_usage":{"cpu":0,"memory":0},"metadata":{"language_info":{"codemirror_mode":{"name":"ipython","version":3},"file_extension":".py","mimetype":"text/x-python","name":"python","nbconvert_exporter":"python","pygments_lexer":"ipython3","version":"3.7.6"}},"trust":false,"type":"settings"}
{"cell_type":"code","exec_count":1,"id":"4e5e55","input":"empty_list = []","pos":2,"type":"cell"}
{"cell_type":"code","exec_count":10,"id":"fa40d8","input":"list1[:2]","output":{"0":{"data":{"text/plain":"['a', 'b']"},"exec_count":10,"output_type":"execute_result"}},"pos":14,"type":"cell"}
{"cell_type":"code","exec_count":11,"id":"c41b45","input":"list2[:3]","output":{"0":{"data":{"text/plain":"[1, 2, 3]"},"exec_count":11,"output_type":"execute_result"}},"pos":15,"type":"cell"}
{"cell_type":"code","exec_count":12,"id":"4d3c61","input":"list1[-1]","output":{"0":{"data":{"text/plain":"'e'"},"exec_count":12,"output_type":"execute_result"}},"pos":17,"type":"cell"}
{"cell_type":"code","exec_count":13,"id":"9028a6","input":"list1[-2:]","output":{"0":{"data":{"text/plain":"['d', 'e']"},"exec_count":13,"output_type":"execute_result"}},"pos":18,"type":"cell"}
{"cell_type":"code","exec_count":14,"id":"0faf5d","input":"list2[-1]","output":{"0":{"data":{"text/plain":"5"},"exec_count":14,"output_type":"execute_result"}},"pos":19,"type":"cell"}
{"cell_type":"code","exec_count":16,"id":"415923","input":"# homework (optional) \n\n# famous microsoft interview problem \n# check if a word is Palindrome — they’re the same backwards and forwards!\n\n# for example, \n# word = ana\n# word = wow, \n\n# input from user \n# algorithm as a function to check whether a given word is a palindrome \n# output the result -- print(the word '...' is or is not a palindrome) \n","pos":20,"type":"cell"}
{"cell_type":"code","exec_count":2,"id":"f7c458","input":"list1 = [\"a\",\"b\",\"c\",\"d\",\"e\"]","pos":3,"type":"cell"}
{"cell_type":"code","exec_count":3,"id":"2f923d","input":"list1","output":{"0":{"data":{"text/plain":"['a', 'b', 'c', 'd', 'e']"},"exec_count":3,"output_type":"execute_result"}},"pos":4,"type":"cell"}
{"cell_type":"code","exec_count":4,"id":"06d148","input":"print(list1)","output":{"0":{"name":"stdout","output_type":"stream","text":"['a', 'b', 'c', 'd', 'e']\n"}},"pos":5,"type":"cell"}
{"cell_type":"code","exec_count":5,"id":"ca8169","input":"list2 = [1,2,3,4,5]","pos":6,"type":"cell"}
{"cell_type":"code","exec_count":6,"id":"ad145a","input":"list2","output":{"0":{"data":{"text/plain":"[1, 2, 3, 4, 5]"},"exec_count":6,"output_type":"execute_result"}},"pos":7,"type":"cell"}
{"cell_type":"code","exec_count":7,"id":"b74add","input":"list1[0]","output":{"0":{"data":{"text/plain":"'a'"},"exec_count":7,"output_type":"execute_result"}},"pos":9,"type":"cell"}
{"cell_type":"code","exec_count":8,"id":"180e68","input":"list2[0]","output":{"0":{"data":{"text/plain":"1"},"exec_count":8,"output_type":"execute_result"}},"pos":10,"type":"cell"}
{"cell_type":"code","exec_count":9,"id":"719c99","input":"list2[0:2]","output":{"0":{"data":{"text/plain":"[1, 2]"},"exec_count":9,"output_type":"execute_result"}},"pos":12,"type":"cell"}
{"cell_type":"code","id":"42d922","input":"","pos":21,"type":"cell"}
{"cell_type":"markdown","id":"77dcf9","input":"A Python list stores values separated by comma.  Values can be strings, and numbers.\n","pos":1,"type":"cell"}
{"cell_type":"markdown","id":"81c1e6","input":"The first number tells us where to start while the second tells us where to end and is exclusive.  If we don't enter the first number, we will get back the first x items, where x is the second index number we provide.","pos":13,"type":"cell"}
{"cell_type":"markdown","id":"97d614","input":"# Python Lists","pos":0,"type":"cell"}
{"cell_type":"markdown","id":"ae92fa","input":"Each item in the list has an index.  By using a list index you can represent each item in a list. In Python, the index starts at 0, so to get the first item, we would call index 0.","pos":8,"type":"cell"}
{"cell_type":"markdown","id":"be0460","input":"We can also call the ends of a list by doing the following.","pos":16,"type":"cell"}
{"cell_type":"markdown","id":"f3386c","input":"We can also use a range of indexes to call back part of a list in a range. ","pos":11,"type":"cell"}
{"id":0,"time":1627526290657,"type":"user"}
{"last_load":1627526137376,"type":"file"}