{"backend_state":"running","kernel":"python3-ubuntu","kernel_state":"idle","kernel_usage":{"cpu":0,"memory":81195008},"metadata":{"language_info":{"codemirror_mode":{"name":"ipython","version":3},"file_extension":".py","mimetype":"text/x-python","name":"python","nbconvert_exporter":"python","pygments_lexer":"ipython3","version":"3.8.5"}},"trust":true,"type":"settings"}
{"cell_type":"code","end":1627441188169,"exec_count":1,"id":"d8bd68","input":"# create an empty dicionary \nEmptyDictionary = {}\n","kernel":"python3-ubuntu","pos":2,"start":1627441188162,"state":"done","type":"cell"}
{"cell_type":"code","end":1627441190501,"exec_count":2,"id":"4e0045","input":"vocabDictionary = {      #dictionary/key pairs for definitions\n    \"shizentai\"   : \"natural stance\",\n    \"choku-zuki\"  : \"straight punch\",\n    \"oi-zuki\"     : \"front lunge punch\",\n    \"gyaku-zuki\"  : \"reverse punch\",\n    \"gedan barai\" : \"down block\",\n    \"age-uke\"     : \"rising block\"\n    }","kernel":"python3-ubuntu","pos":5,"start":1627441190495,"state":"done","type":"cell"}
{"cell_type":"code","end":1627441190928,"exec_count":3,"id":"da9da4","input":"# print all the keys\nvocabDictionary.keys()","kernel":"python3-ubuntu","output":{"0":{"data":{"text/plain":"dict_keys(['shizentai', 'choku-zuki', 'oi-zuki', 'gyaku-zuki', 'gedan barai', 'age-uke'])"},"exec_count":3}},"pos":6,"start":1627441190919,"state":"done","type":"cell"}
{"cell_type":"code","end":1627441191580,"exec_count":4,"id":"4db334","input":"#turns words into a list\nkeyword_list = list(vocabDictionary.keys()) \nprint(keyword_list)","kernel":"python3-ubuntu","output":{"0":{"name":"stdout","text":"['shizentai', 'choku-zuki', 'oi-zuki', 'gyaku-zuki', 'gedan barai', 'age-uke']\n"}},"pos":7,"start":1627441191566,"state":"done","type":"cell"}
{"cell_type":"code","end":1627441192013,"exec_count":5,"id":"0d2db7","input":"# print all the values\nvocabDictionary.values()","kernel":"python3-ubuntu","output":{"0":{"data":{"text/plain":"dict_values(['natural stance', 'straight punch', 'front lunge punch', 'reverse punch', 'down block', 'rising block'])"},"exec_count":5}},"pos":8,"start":1627441192005,"state":"done","type":"cell"}
{"cell_type":"code","end":1627441192955,"exec_count":6,"id":"5da2b4","input":"# https://docs.python.org/3/library/random.html\nimport random\n\nrandom.shuffle(keyword_list)","kernel":"python3-ubuntu","pos":10,"start":1627441192949,"state":"done","type":"cell"}
{"cell_type":"code","end":1627441193572,"exec_count":7,"id":"7f2ab8","input":"print(keyword_list)","kernel":"python3-ubuntu","output":{"0":{"name":"stdout","text":"['age-uke', 'choku-zuki', 'shizentai', 'gedan barai', 'gyaku-zuki', 'oi-zuki']\n"}},"pos":11,"start":1627441193566,"state":"done","type":"cell"}
{"cell_type":"code","end":1627441194423,"exec_count":8,"id":"63b8a2","input":"# Basic usage of the str.format() method looks like this:\nprint('We are the {} who say \"{}!\"'.format('knights', 'Ni'))","kernel":"python3-ubuntu","output":{"0":{"name":"stdout","text":"We are the knights who say \"Ni!\"\n"}},"pos":13,"start":1627441194418,"state":"done","type":"cell"}
{"cell_type":"code","end":1627441194810,"exec_count":9,"id":"2ca480","input":"# A number in the brackets can be used to refer to the position of the object passed into the str.format() method.\n\nprint('{0} and {1}'.format('spam', 'eggs'))","kernel":"python3-ubuntu","output":{"0":{"name":"stdout","text":"spam and eggs\n"}},"pos":14,"start":1627441194807,"state":"done","type":"cell"}
{"cell_type":"code","end":1627441195265,"exec_count":10,"id":"5b7906","input":"print('{1} and {0}'.format('spam', 'eggs'))","kernel":"python3-ubuntu","output":{"0":{"name":"stdout","text":"eggs and spam\n"}},"pos":15,"start":1627441195262,"state":"done","type":"cell"}
{"cell_type":"code","end":1627441195610,"exec_count":11,"id":"b10b91","input":"# If keyword arguments are used in the str.format() method, their values are referred to by using the name of the argument.\n\nprint('This {food} is {adjective}.'.format(food='spam', adjective='absolutely horrible'))","kernel":"python3-ubuntu","output":{"0":{"name":"stdout","text":"This spam is absolutely horrible.\n"}},"pos":16,"start":1627441195606,"state":"done","type":"cell"}
{"cell_type":"code","end":1627441198296,"exec_count":12,"id":"840b70","input":"correct = 0\nwrong = 0\nfor keyword in keyword_list:\n    \n    print(\"{}\".format(keyword))\n    userInputAnswer = input(\"ANSWER: \")\n    print(vocabDictionary[keyword])\n    print(\" \")\n\n    if userInputAnswer == (vocabDictionary[keyword]):\n        print(\"CORRECT\")\n        correct += 1\n    else:\n        print(\"WRONG\")\n        wrong += 1\n    print('_'*25)   #line separator","kernel":"python3-ubuntu","metadata":{"cocalc":{"outputs":{"1":{"name":"input","opts":{"password":false,"prompt":"ANSWER: "},"output_type":"stream","value":"df"},"11":{"name":"input","opts":{"password":false,"prompt":"ANSWER: "},"output_type":"stream","value":"df"},"3":{"name":"input","opts":{"password":false,"prompt":"ANSWER: "},"output_type":"stream","value":"df"},"5":{"name":"input","opts":{"password":false,"prompt":"ANSWER: "},"output_type":"stream","value":"af"},"7":{"name":"input","opts":{"password":false,"prompt":"ANSWER: "},"output_type":"stream","value":"af"},"9":{"name":"input","opts":{"password":false,"prompt":"ANSWER: "},"output_type":"stream","value":"sf"}}}},"output":{"0":{"name":"stdout","text":"age-uke\n"},"1":{"name":"input","opts":{"password":false,"prompt":"ANSWER: "},"value":""},"10":{"name":"stdout","text":"reverse punch\n \nWRONG\n_________________________\noi-zuki\n"},"11":{"name":"input","opts":{"password":false,"prompt":"ANSWER: "},"value":""},"12":{"name":"stdout","text":"front lunge punch\n \nWRONG\n_________________________\n"},"2":{"name":"stdout","text":"rising block\n \nWRONG\n_________________________\nchoku-zuki\n"},"3":{"name":"input","opts":{"password":false,"prompt":"ANSWER: "},"value":""},"4":{"name":"stdout","text":"straight punch\n \nWRONG\n_________________________\nshizentai\n"},"5":{"name":"input","opts":{"password":false,"prompt":"ANSWER: "},"value":""},"6":{"name":"stdout","text":"natural stance\n \nWRONG\n_________________________\ngedan barai\n"},"7":{"name":"input","opts":{"password":false,"prompt":"ANSWER: "},"value":""},"8":{"name":"stdout","text":"down block\n \nWRONG\n_________________________\ngyaku-zuki\n"},"9":{"name":"input","opts":{"password":false,"prompt":"ANSWER: "},"value":""}},"pos":18,"start":1627441196109,"state":"done","type":"cell"}
{"cell_type":"code","end":1627441199190,"exec_count":13,"id":"ba2b98","input":"import random\n\nanswer = input(\"Play game? ('y' to continue) \")\nprint(\" \")\nwhile answer == \"y\":\n\n    vocabDictionary = {      #dictionary/key pairs for definitions\n    \"shizentai\"   : \"natural stance\",\n    \"choku-zuki\"  : \"straight punch\",\n    \"oi-zuki\"     : \"front lunge punch\",\n    \"gyaku-zuki\"  : \"reverse punch\",\n    \"gedan barai\" : \"down block\",\n    \"age-uke\"     : \"rising block\"\n    }\n\n    keyword_list = list(vocabDictionary.keys()) #turns words into a list\n\n    random.shuffle(keyword_list) #shuffle keywords\n    correct = 0\n    wrong = 0\n    for keyword in keyword_list:\n        display = \"{}\"\n     \n        print(display.format(keyword))\n        userInputAnswer = input(\"ANSWER: \")\n        print(vocabDictionary[keyword])\n        print(\" \")\n\n        if userInputAnswer == (vocabDictionary[keyword]):\n            print(\"CORRECT\")\n            correct += 1\n        else:\n            print(\"WRONG\")\n            wrong += 1\n        print('_'*25)   #line separator\n        \n    # final score\n    displayScore = \"SCORE: {} correct and {} wrong\"\n    print(displayScore.format(correct, wrong))\n    answer = input(\"Play again? ('y' to continue) \")\nprint(\" \")\nprint(\"Thanks for playing\")","kernel":"python3-ubuntu","metadata":{"cocalc":{"outputs":{"0":{"name":"input","opts":{"password":false,"prompt":"Play game? ('y' to continue) "},"output_type":"stream","value":"n"},"10":{"name":"input","opts":{"password":false,"prompt":"ANSWER: "},"output_type":"stream","value":"d"},"12":{"name":"input","opts":{"password":false,"prompt":"ANSWER: "},"output_type":"stream","value":"f"},"14":{"name":"input","opts":{"password":false,"prompt":"Play again? ('y' to continue) "},"output_type":"stream","value":"n"},"2":{"name":"input","opts":{"password":false,"prompt":"ANSWER: "},"output_type":"stream","value":"d"},"4":{"name":"input","opts":{"password":false,"prompt":"ANSWER: "},"output_type":"stream","value":"a"},"6":{"name":"input","opts":{"password":false,"prompt":"ANSWER: "},"output_type":"stream","value":"f"},"8":{"name":"input","opts":{"password":false,"prompt":"ANSWER: "},"output_type":"stream","value":"a"}}}},"output":{"0":{"name":"input","opts":{"password":false,"prompt":"Play game? ('y' to continue) "},"value":""},"1":{"name":"stdout","text":" \n \nThanks for playing\n"}},"pos":20,"start":1627441198654,"state":"done","type":"cell"}
{"cell_type":"code","exec_count":0,"id":"01dd8a","input":"","pos":24,"type":"cell"}
{"cell_type":"code","exec_count":0,"id":"13817b","input":"","pos":25,"type":"cell"}
{"cell_type":"code","exec_count":0,"id":"1d781f","input":"","pos":26,"type":"cell"}
{"cell_type":"code","exec_count":0,"id":"28fbc2","input":"","pos":23,"type":"cell"}
{"cell_type":"code","exec_count":0,"id":"2bfd3b","input":"","pos":36,"type":"cell"}
{"cell_type":"code","exec_count":0,"id":"5dd0cc","input":"","pos":30,"type":"cell"}
{"cell_type":"code","exec_count":0,"id":"6cddd6","input":"","pos":33,"type":"cell"}
{"cell_type":"code","exec_count":0,"id":"8582e7","input":"","pos":35,"type":"cell"}
{"cell_type":"code","exec_count":0,"id":"90a018","input":"","pos":31,"type":"cell"}
{"cell_type":"code","exec_count":0,"id":"a1ceb5","input":"","pos":28,"type":"cell"}
{"cell_type":"code","exec_count":0,"id":"bdad9a","input":"","pos":29,"type":"cell"}
{"cell_type":"code","exec_count":0,"id":"c2f789","input":"","pos":27,"type":"cell"}
{"cell_type":"code","exec_count":0,"id":"c8a54e","input":"","pos":34,"type":"cell"}
{"cell_type":"code","exec_count":0,"id":"fa453c","input":"","pos":32,"type":"cell"}
{"cell_type":"code","id":"c14063","input":"","pos":21,"type":"cell"}
{"cell_type":"markdown","id":"0b3ff1","input":"## Task 1: create the dictionary for vocabulary ","pos":4,"type":"cell"}
{"cell_type":"markdown","id":"290ad9","input":"## Task 2: Shuffle the list ","pos":9,"type":"cell"}
{"cell_type":"markdown","id":"58e712","input":"In general, dictionary is in the following format:\n\n#### when you have only one item \ndict = {key : value}\n\n#### when you have more than one item \ndict = {key1 : value1, \n        key2 : value2}","pos":3,"type":"cell"}
{"cell_type":"markdown","id":"729e99","input":"### Learn The String format() Method\nhttps://docs.python.org/3/tutorial/inputoutput.html","pos":12,"type":"cell"}
{"cell_type":"markdown","id":"7aad9f","input":"## Task 3: \n\n* display the key \n* ask the user to enter the answer (value)\n* check whether the answer is right or wrong \n* return how many right answers and how many wrong answers \n","pos":17,"type":"cell"}
{"cell_type":"markdown","id":"b9ad1e","input":"\n<center />\n<img src=\"https://globalmartialarts.university/wp-content/uploads/2021/01/Shotokan-Beginners-Guide-Infographic-2.jpg\" width=560 height=660 />\n","pos":1,"type":"cell"}
{"cell_type":"markdown","id":"c1eb5e","input":"# build vocabulary game \n\nobjectives: \n\n* review for loop, conditional statement (if ... else if ... else)\n* learn dictionary \n* learn import libraries such as random \n* learn string format ","pos":0,"type":"cell"}
{"cell_type":"markdown","id":"d2debd","input":"## Task 4: put everything together. \n\nAsk the user if he/she wants to play the game. If the answer is yes, keep runing the program. Otherwise, stop. ","pos":19,"type":"cell"}
{"id":0,"time":1627440956941,"type":"user"}
{"last_load":1627440957115,"type":"file"}